# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: parse_tree.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("parse_tree.proto", :syntax => :proto3) do
    add_message "pg_query.Node" do
      oneof :node do
        optional :raw_stmt, :message, 1, "pg_query.RawStmt"
        optional :select_stmt, :message, 2, "pg_query.SelectStmt"
        optional :into_clause, :message, 3, "pg_query.IntoClause"
        optional :with_clause, :message, 4, "pg_query.WithClause"
        optional :range_var, :message, 5, "pg_query.RangeVar"
        optional :alias, :message, 6, "pg_query.Alias"
        optional :res_target, :message, 7, "pg_query.ResTarget"
        optional :a_const, :message, 8, "pg_query.A_Const"
        optional :value, :message, 9, "pg_query.Value"
      end
    end
    add_message "pg_query.RawStmt" do
      optional :stmt, :message, 1, "pg_query.Node"
      optional :stmt_location, :int32, 2
      optional :stmt_len, :int32, 3
    end
    add_message "pg_query.SelectStmt" do
      repeated :distinctClause, :message, 1, "pg_query.Node"
      optional :intoClause, :message, 2, "pg_query.IntoClause"
      repeated :targetList, :message, 3, "pg_query.Node"
      repeated :fromClause, :message, 4, "pg_query.Node"
      repeated :whereClause, :message, 5, "pg_query.Node"
      repeated :groupClause, :message, 6, "pg_query.Node"
      repeated :havingClause, :message, 7, "pg_query.Node"
      repeated :windowClause, :message, 8, "pg_query.Node"
      repeated :valuesLists, :message, 9, "pg_query.Node"
      repeated :sortClause, :message, 10, "pg_query.Node"
      optional :limitOffset, :message, 11, "pg_query.Node"
      optional :limitCount, :message, 12, "pg_query.Node"
      repeated :lockingClause, :message, 13, "pg_query.Node"
      optional :withClause, :message, 14, "pg_query.WithClause"
      optional :op, :enum, 15, "pg_query.SetOperation"
      optional :all, :bool, 16
      optional :larg, :message, 17, "pg_query.SelectStmt"
      optional :rarg, :message, 18, "pg_query.SelectStmt"
    end
    add_message "pg_query.IntoClause" do
      optional :rel, :message, 1, "pg_query.RangeVar"
      repeated :colNames, :message, 2, "pg_query.Node"
      optional :accessMethod, :string, 3
      repeated :options, :message, 4, "pg_query.Node"
      optional :onCommit, :enum, 5, "pg_query.OnCommitAction"
      optional :tableSpaceName, :string, 6
      optional :viewQuery, :message, 7, "pg_query.Node"
      optional :skipData, :bool, 8
    end
    add_message "pg_query.WithClause" do
      repeated :ctes, :message, 1, "pg_query.Node"
      optional :recursive, :bool, 2
      optional :location, :int32, 3
    end
    add_message "pg_query.RangeVar" do
      optional :catalogname, :string, 1
      optional :schemaname, :string, 2
      optional :relname, :string, 3
      optional :inh, :bool, 4
      optional :relpersistence, :string, 5
      optional :alias, :message, 6, "pg_query.Alias"
      optional :location, :int32, 7
    end
    add_message "pg_query.Alias" do
      optional :aliasname, :string, 1
      repeated :colnames, :message, 2, "pg_query.Node"
    end
    add_message "pg_query.ResTarget" do
      optional :name, :string, 1
      repeated :indirection, :message, 2, "pg_query.Node"
      optional :val, :message, 3, "pg_query.Node"
      optional :location, :int32, 4
    end
    add_message "pg_query.A_Const" do
      optional :val, :message, 1, "pg_query.Value"
      optional :location, :int32, 2
    end
    add_message "pg_query.Value" do
      oneof :val_union do
        optional :ival, :int32, 1
        optional :str, :string, 2
      end
    end
    add_enum "pg_query.SetOperation" do
      value :SETOP_NONE, 0
      value :SETOP_UNION, 1
      value :SETOP_INTERSECT, 2
      value :SETOP_EXCEPT, 3
    end
    add_enum "pg_query.OnCommitAction" do
      value :ONCOMMIT_NOOP, 0
      value :ONCOMMIT_PRESERVE_ROWS, 1
      value :ONCOMMIT_DELETE_ROWS, 2
      value :ONCOMMIT_DROP, 3
    end
  end
end

module PgQuery
  Node = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.Node").msgclass
  RawStmt = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.RawStmt").msgclass
  SelectStmt = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.SelectStmt").msgclass
  IntoClause = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.IntoClause").msgclass
  WithClause = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.WithClause").msgclass
  RangeVar = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.RangeVar").msgclass
  Alias = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.Alias").msgclass
  ResTarget = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.ResTarget").msgclass
  A_Const = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.A_Const").msgclass
  Value = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.Value").msgclass
  SetOperation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.SetOperation").enummodule
  OnCommitAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("pg_query.OnCommitAction").enummodule
end
